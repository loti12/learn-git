{
  "name": "git - 简明指南",
  "tagline": "这里只有简单的 git",
  "body": "## git 下载安装\r\n\r\n* [下载 git OSX](http://code.google.com/p/git-osx-installer/downloads/list?can=3)\r\n* [下载 git WINDOWS](http://msysgit.github.io/)\r\n\r\n## 创建新仓库\r\n\r\n创建新文件夹，执行 `git init` , 来创建新仓库\r\n\r\n## 检出仓库\r\n\r\n执行命令 `git clone /path/to/repository`\r\n\r\n## git 三种状态\r\n\r\n本地仓库模型有三种状态。第一个是你的 工作目录，它持有实际文件；第二个是 暂存区（Index），它像个缓存区域，临时保存你的改动；最后是 HEAD，它指向你最后一次提交的结果。\r\n\r\n![git 仓库模型](http://rogerdudler.github.io/git-guide/img/trees.png)\r\n\r\n### 相应的检入与检出命令如图：\r\n\r\n![git 三种状态之间的转换](https://segmentfault.com/img/bVs6Ae)\r\n\r\n### 相关命令的简要说明如下：\r\n\r\n* `git add files`：把当前工作文件拷贝到暂存区域。\r\n* `git commit`：在暂存区域生成文件快照并提交到本地仓库。\r\n* `git reset -- files`：用来撤销最后一次 git add files，也可以用 git reset 撤销所有暂存区域文件。\r\n* `git checkout -- files`：把文件从暂存区域覆盖到工作目录，用来丢弃本地修改。\r\n\r\n## 推送改动\r\n\r\n现在你的代码已经提交到本地仓库了，可以使用 `git push origin master` 推送到远程仓库\r\n\r\n如果还没有克隆，可以使用 `git remote add origin server`\r\n\r\n## 分支管理",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}